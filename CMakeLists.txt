CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(MoonState CXX)

# Default build type is Release
if(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE "Release")
endif(NOT CMAKE_BUILD_TYPE)

# Default DPDK header include path is in the system headers
if(NOT DPDK_INCLUDE_DIR)
	SET(DPDK_INCLUDE_DIR "/usr/include/dpdk/")
endif(NOT DPDK_INCLUDE_DIR)

if(LIBMOON_BUILD_LIBRARY)
	SET(DPDK_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/libmoon/deps/dpdk/x86_64-native-linuxapp-gcc/include")
endif(LIBMOON_BUILD_LIBRARY)

SET(CMAKE_CXX_FLAGS "-Wall -Wextra -std=c++14 -march=native -O3 -fno-omit-frame-pointer")

SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -DDEBUG -g3 -O0 -fno-optimize-sibling-calls -fno-inline")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O3")

INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_SOURCE_DIR}/include
)

INCLUDE_DIRECTORIES(
	${DPDK_INCLUDE_DIR}
)

FILE(GLOB SOURCES src/*.cpp)

SET(ALL_LIBS )

if(WITH_PCAP)
	SET(ALL_LIBS
		${ALL_LIBS}
		pcap
	)
	ADD_DEFINITIONS(-DWITH_PCAP)
endif(WITH_PCAP)

ADD_LIBRARY(${PROJECT_NAME} STATIC ${SOURCES})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${ALL_LIBS})

#ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES})
#TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${ALL_LIBS})

# For some reason, the tests don't compile for MoonGen...
if(NOT LIBMOON_BUILD_LIBRARY)
	ENABLE_TESTING()
	ADD_SUBDIRECTORY(tests)
endif(NOT LIBMOON_BUILD_LIBRARY)
